# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_metadata/proto/v0/metric.proto
# pylint: disable=bad-continuation
# pylint: disable=bad-whitespace
# pylint: disable=missing-module-docstring
# pylint: disable=g-import-not-at-top
# pylint: disable=protected-access

import sys
_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from google.protobuf.internal import enum_type_wrapper
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='tensorflow_metadata/proto/v0/metric.proto',
    package='tensorflow.metadata.v0',
    syntax='proto3',
    serialized_options=_b('\n\032org.tensorflow.metadata.v0P\001\370\001\001'),
    serialized_pb=_b(
        '\n)tensorflow_metadata/proto/v0/metric.proto\x12\x16tensorflow.metadata.v0\x1a\x1egoogle/protobuf/wrappers.proto\x1a google/protobuf/descriptor.proto\"\x18\n\x0e\x42inaryAccuracy:\x06\x88\xd9\xc0\xe4\x06\x01\"\x1d\n\x13\x43\x61tegoricalAccuracy:\x06\x88\xd9\xc0\xe4\x06\x01\"!\n\x17\x43\x61tegoricalCrossEntropy:\x06\x88\xd9\xc0\xe4\x06\x02\"\x10\n\x06\x43osine:\x06\x88\xd9\xc0\xe4\x06\x02\"\x0f\n\x05Hinge:\x06\x88\xd9\xc0\xe4\x06\x02\"#\n\x19KullbackLeiblerDivergence:\x06\x88\xd9\xc0\xe4\x06\x02\"\x1b\n\x11MeanAbsoluteError:\x06\x88\xd9\xc0\xe4\x06\x02\"%\n\x1bMeanAbsolutePercentageError:\x06\x88\xd9\xc0\xe4\x06\x02\"\x1a\n\x10MeanSquaredError:\x06\x88\xd9\xc0\xe4\x06\x02\"%\n\x1bMeanSquaredLogarithmicError:\x06\x88\xd9\xc0\xe4\x06\x02\"\x11\n\x07Poisson:\x06\x88\xd9\xc0\xe4\x06\x02\"\x16\n\x0cSquaredHinge:\x06\x88\xd9\xc0\xe4\x06\x02\"!\n\x17TopKCategoricalAccuracy:\x06\x88\xd9\xc0\xe4\x06\x01\"\'\n\x1dSparseTopKCategoricalAccuracy:\x06\x88\xd9\xc0\xe4\x06\x01\"\x1c\n\x12\x42inaryCrossEntropy:\x06\x88\xd9\xc0\xe4\x06\x02\"\x1c\n\x12LogisticRegression:\x06\x88\xd9\xc0\xe4\x06\x02\"\r\n\x03\x41UC:\x06\x88\xd9\xc0\xe4\x06\x01\"\x1c\n\x12\x41UCPrecisionRecall:\x06\x88\xd9\xc0\xe4\x06\x01\"U\n\x18SensitivityAtSpecificity\x12\x31\n\x0bspecificity\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue:\x06\x88\xd9\xc0\xe4\x06\x01\"U\n\x18SpecificityAtSensitivity\x12\x31\n\x0bsensitivity\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue:\x06\x88\xd9\xc0\xe4\x06\x01\"I\n\x11PrecisionAtRecall\x12,\n\x06recall\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue:\x06\x88\xd9\xc0\xe4\x06\x01\"L\n\x11RecallAtPrecision\x12/\n\tprecision\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue:\x06\x88\xd9\xc0\xe4\x06\x01\"\x16\n\x0cPrecisionAtK:\x06\x88\xd9\xc0\xe4\x06\x01\"\x14\n\x12MeanReciprocalRank\"&\n\x0c\x42lockUtility\x12\x0e\n\x06weight\x18\x01 \x03(\x01:\x06\x88\xd9\xc0\xe4\x06\x01\":\n\x0c\x43ustomMetric\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x14\n\x0cis_maximized\x18\x02 \x01(\x08:\x06\x88\xd9\xc0\xe4\x06\x03\"\xf7\x05\n\x11ObjectiveFunction\x12J\n\x14\x62inary_cross_entropy\x18\x01 \x01(\x0b\x32*.tensorflow.metadata.v0.BinaryCrossEntropyH\x00\x12I\n\x13logistic_regression\x18\x02 \x01(\x0b\x32*.tensorflow.metadata.v0.LogisticRegressionH\x00\x12\x41\n\rsquared_error\x18\x03 \x01(\x0b\x32(.tensorflow.metadata.v0.MeanSquaredErrorH\x00\x12=\n\rcustom_metric\x18\x04 \x01(\x0b\x32$.tensorflow.metadata.v0.CustomMetricH\x00\x12*\n\x03\x61uc\x18\x05 \x01(\x0b\x32\x1b.tensorflow.metadata.v0.AUCH\x00\x12H\n\x13mean_absolute_error\x18\x06 \x01(\x0b\x32).tensorflow.metadata.v0.MeanAbsoluteErrorH\x00\x12]\n\x1emean_absolute_percentage_error\x18\x07 \x01(\x0b\x32\x33.tensorflow.metadata.v0.MeanAbsolutePercentageErrorH\x00\x12]\n\x1emean_squared_logarithmic_error\x18\x08 \x01(\x0b\x32\x33.tensorflow.metadata.v0.MeanSquaredLogarithmicErrorH\x00\x12T\n\x19\x63\x61tegorical_cross_entropy\x18\t \x01(\x0b\x32/.tensorflow.metadata.v0.CategoricalCrossEntropyH\x00\x12\x32\n\x07poisson\x18\n \x01(\x0b\x32\x1f.tensorflow.metadata.v0.PoissonH\x00\x42\x0b\n\tobjective\"\xa1\x0f\n\x11PerformanceMetric\x12*\n\x03\x61uc\x18\x01 \x01(\x0b\x32\x1b.tensorflow.metadata.v0.AUCH\x00\x12J\n\x14\x61uc_precision_recall\x18\x1a \x01(\x0b\x32*.tensorflow.metadata.v0.AUCPrecisionRecallH\x00\x12\x41\n\x0f\x62inary_accuracy\x18\x02 \x01(\x0b\x32&.tensorflow.metadata.v0.BinaryAccuracyH\x00\x12J\n\x14\x62inary_cross_entropy\x18\x03 \x01(\x0b\x32*.tensorflow.metadata.v0.BinaryCrossEntropyH\x00\x12=\n\rblock_utility\x18\x04 \x01(\x0b\x32$.tensorflow.metadata.v0.BlockUtilityH\x00\x12K\n\x14\x63\x61tegorical_accuracy\x18\x05 \x01(\x0b\x32+.tensorflow.metadata.v0.CategoricalAccuracyH\x00\x12T\n\x19\x63\x61tegorical_cross_entropy\x18\x06 \x01(\x0b\x32/.tensorflow.metadata.v0.CategoricalCrossEntropyH\x00\x12\x30\n\x06\x63osine\x18\x07 \x01(\x0b\x32\x1e.tensorflow.metadata.v0.CosineH\x00\x12.\n\x05hinge\x18\x08 \x01(\x0b\x32\x1d.tensorflow.metadata.v0.HingeH\x00\x12X\n\x1bkullback_leibler_divergence\x18\t \x01(\x0b\x32\x31.tensorflow.metadata.v0.KullbackLeiblerDivergenceH\x00\x12I\n\x13logistic_regression\x18\n \x01(\x0b\x32*.tensorflow.metadata.v0.LogisticRegressionH\x00\x12H\n\x13mean_absolute_error\x18\x0b \x01(\x0b\x32).tensorflow.metadata.v0.MeanAbsoluteErrorH\x00\x12]\n\x1emean_absolute_percentage_error\x18\x0c \x01(\x0b\x32\x33.tensorflow.metadata.v0.MeanAbsolutePercentageErrorH\x00\x12\x41\n\rsquared_error\x18\r \x01(\x0b\x32(.tensorflow.metadata.v0.MeanSquaredErrorH\x00\x12]\n\x1emean_squared_logarithmic_error\x18\x0e \x01(\x0b\x32\x33.tensorflow.metadata.v0.MeanSquaredLogarithmicErrorH\x00\x12J\n\x14mean_reciprocal_rank\x18\x0f \x01(\x0b\x32*.tensorflow.metadata.v0.MeanReciprocalRankH\x00\x12\x32\n\x07poisson\x18\x10 \x01(\x0b\x32\x1f.tensorflow.metadata.v0.PoissonH\x00\x12>\n\x0eprecision_at_k\x18\x11 \x01(\x0b\x32$.tensorflow.metadata.v0.PrecisionAtKH\x00\x12=\n\rsquared_hinge\x18\x12 \x01(\x0b\x32$.tensorflow.metadata.v0.SquaredHingeH\x00\x12\x62\n!sparse_top_k_categorical_accuracy\x18\x13 \x01(\x0b\x32\x35.tensorflow.metadata.v0.SparseTopKCategoricalAccuracyH\x00\x12U\n\x1atop_k_categorical_accuracy\x18\x14 \x01(\x0b\x32/.tensorflow.metadata.v0.TopKCategoricalAccuracyH\x00\x12=\n\rcustom_metric\x18\x15 \x01(\x0b\x32$.tensorflow.metadata.v0.CustomMetricH\x00\x12V\n\x1asensitivity_at_specificity\x18\x16 \x01(\x0b\x32\x30.tensorflow.metadata.v0.SensitivityAtSpecificityH\x00\x12V\n\x1aspecificity_at_sensitivity\x18\x17 \x01(\x0b\x32\x30.tensorflow.metadata.v0.SpecificityAtSensitivityH\x00\x12H\n\x13precision_at_recall\x18\x18 \x01(\x0b\x32).tensorflow.metadata.v0.PrecisionAtRecallH\x00\x12H\n\x13recall_at_precision\x18\x19 \x01(\x0b\x32).tensorflow.metadata.v0.RecallAtPrecisionH\x00\x42\x14\n\x12performance_metric*A\n\nMetricType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08MAXIMIZE\x10\x01\x12\x0c\n\x08MINIMIZE\x10\x02\x12\n\n\x06\x43USTOM\x10\x03:[\n\x0bmetric_type\x12\x1f.google.protobuf.MessageOptions\x18\x91\x8b\xc8l \x01(\x0e\x32\".tensorflow.metadata.v0.MetricTypeB!\n\x1aorg.tensorflow.metadata.v0P\x01\xf8\x01\x01\x62\x06proto3'
    ),
    dependencies=[
        google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,
    ])

_METRICTYPE = _descriptor.EnumDescriptor(
    name='MetricType',
    full_name='tensorflow.metadata.v0.MetricType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='UNKNOWN',
            index=0,
            number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='MAXIMIZE',
            index=1,
            number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='MINIMIZE',
            index=2,
            number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CUSTOM',
            index=3,
            number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3849,
    serialized_end=3914,
)
_sym_db.RegisterEnumDescriptor(_METRICTYPE)

MetricType = enum_type_wrapper.EnumTypeWrapper(_METRICTYPE)
UNKNOWN = 0
MAXIMIZE = 1
MINIMIZE = 2
CUSTOM = 3

METRIC_TYPE_FIELD_NUMBER = 227673489
metric_type = _descriptor.FieldDescriptor(
    name='metric_type',
    full_name='tensorflow.metadata.v0.metric_type',
    index=0,
    number=227673489,
    type=14,
    cpp_type=8,
    label=1,
    has_default_value=False,
    default_value=0,
    message_type=None,
    enum_type=None,
    containing_type=None,
    is_extension=True,
    extension_scope=None,
    serialized_options=None,
    file=DESCRIPTOR)

_BINARYACCURACY = _descriptor.Descriptor(
    name='BinaryAccuracy',
    full_name='tensorflow.metadata.v0.BinaryAccuracy',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=135,
    serialized_end=159,
)

_CATEGORICALACCURACY = _descriptor.Descriptor(
    name='CategoricalAccuracy',
    full_name='tensorflow.metadata.v0.CategoricalAccuracy',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=161,
    serialized_end=190,
)

_CATEGORICALCROSSENTROPY = _descriptor.Descriptor(
    name='CategoricalCrossEntropy',
    full_name='tensorflow.metadata.v0.CategoricalCrossEntropy',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=192,
    serialized_end=225,
)

_COSINE = _descriptor.Descriptor(
    name='Cosine',
    full_name='tensorflow.metadata.v0.Cosine',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=227,
    serialized_end=243,
)

_HINGE = _descriptor.Descriptor(
    name='Hinge',
    full_name='tensorflow.metadata.v0.Hinge',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=245,
    serialized_end=260,
)

_KULLBACKLEIBLERDIVERGENCE = _descriptor.Descriptor(
    name='KullbackLeiblerDivergence',
    full_name='tensorflow.metadata.v0.KullbackLeiblerDivergence',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=262,
    serialized_end=297,
)

_MEANABSOLUTEERROR = _descriptor.Descriptor(
    name='MeanAbsoluteError',
    full_name='tensorflow.metadata.v0.MeanAbsoluteError',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=299,
    serialized_end=326,
)

_MEANABSOLUTEPERCENTAGEERROR = _descriptor.Descriptor(
    name='MeanAbsolutePercentageError',
    full_name='tensorflow.metadata.v0.MeanAbsolutePercentageError',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=328,
    serialized_end=365,
)

_MEANSQUAREDERROR = _descriptor.Descriptor(
    name='MeanSquaredError',
    full_name='tensorflow.metadata.v0.MeanSquaredError',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=367,
    serialized_end=393,
)

_MEANSQUAREDLOGARITHMICERROR = _descriptor.Descriptor(
    name='MeanSquaredLogarithmicError',
    full_name='tensorflow.metadata.v0.MeanSquaredLogarithmicError',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=395,
    serialized_end=432,
)

_POISSON = _descriptor.Descriptor(
    name='Poisson',
    full_name='tensorflow.metadata.v0.Poisson',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=434,
    serialized_end=451,
)

_SQUAREDHINGE = _descriptor.Descriptor(
    name='SquaredHinge',
    full_name='tensorflow.metadata.v0.SquaredHinge',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=453,
    serialized_end=475,
)

_TOPKCATEGORICALACCURACY = _descriptor.Descriptor(
    name='TopKCategoricalAccuracy',
    full_name='tensorflow.metadata.v0.TopKCategoricalAccuracy',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=477,
    serialized_end=510,
)

_SPARSETOPKCATEGORICALACCURACY = _descriptor.Descriptor(
    name='SparseTopKCategoricalAccuracy',
    full_name='tensorflow.metadata.v0.SparseTopKCategoricalAccuracy',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=512,
    serialized_end=551,
)

_BINARYCROSSENTROPY = _descriptor.Descriptor(
    name='BinaryCrossEntropy',
    full_name='tensorflow.metadata.v0.BinaryCrossEntropy',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=553,
    serialized_end=581,
)

_LOGISTICREGRESSION = _descriptor.Descriptor(
    name='LogisticRegression',
    full_name='tensorflow.metadata.v0.LogisticRegression',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\002'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=583,
    serialized_end=611,
)

_AUC = _descriptor.Descriptor(
    name='AUC',
    full_name='tensorflow.metadata.v0.AUC',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=613,
    serialized_end=626,
)

_AUCPRECISIONRECALL = _descriptor.Descriptor(
    name='AUCPrecisionRecall',
    full_name='tensorflow.metadata.v0.AUCPrecisionRecall',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=628,
    serialized_end=656,
)

_SENSITIVITYATSPECIFICITY = _descriptor.Descriptor(
    name='SensitivityAtSpecificity',
    full_name='tensorflow.metadata.v0.SensitivityAtSpecificity',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='specificity',
            full_name='tensorflow.metadata.v0.SensitivityAtSpecificity.specificity',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=658,
    serialized_end=743,
)

_SPECIFICITYATSENSITIVITY = _descriptor.Descriptor(
    name='SpecificityAtSensitivity',
    full_name='tensorflow.metadata.v0.SpecificityAtSensitivity',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='sensitivity',
            full_name='tensorflow.metadata.v0.SpecificityAtSensitivity.sensitivity',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=745,
    serialized_end=830,
)

_PRECISIONATRECALL = _descriptor.Descriptor(
    name='PrecisionAtRecall',
    full_name='tensorflow.metadata.v0.PrecisionAtRecall',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='recall',
            full_name='tensorflow.metadata.v0.PrecisionAtRecall.recall',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=832,
    serialized_end=905,
)

_RECALLATPRECISION = _descriptor.Descriptor(
    name='RecallAtPrecision',
    full_name='tensorflow.metadata.v0.RecallAtPrecision',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='precision',
            full_name='tensorflow.metadata.v0.RecallAtPrecision.precision',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=907,
    serialized_end=983,
)

_PRECISIONATK = _descriptor.Descriptor(
    name='PrecisionAtK',
    full_name='tensorflow.metadata.v0.PrecisionAtK',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=985,
    serialized_end=1007,
)

_MEANRECIPROCALRANK = _descriptor.Descriptor(
    name='MeanReciprocalRank',
    full_name='tensorflow.metadata.v0.MeanReciprocalRank',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=1009,
    serialized_end=1029,
)

_BLOCKUTILITY = _descriptor.Descriptor(
    name='BlockUtility',
    full_name='tensorflow.metadata.v0.BlockUtility',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='weight',
            full_name='tensorflow.metadata.v0.BlockUtility.weight',
            index=0,
            number=1,
            type=1,
            cpp_type=5,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=1031,
    serialized_end=1069,
)

_CUSTOMMETRIC = _descriptor.Descriptor(
    name='CustomMetric',
    full_name='tensorflow.metadata.v0.CustomMetric',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='name',
            full_name='tensorflow.metadata.v0.CustomMetric.name',
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b('').decode('utf-8'),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='is_maximized',
            full_name='tensorflow.metadata.v0.CustomMetric.is_maximized',
            index=1,
            number=2,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=_b('\210\331\300\344\006\003'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=1071,
    serialized_end=1129,
)

_OBJECTIVEFUNCTION = _descriptor.Descriptor(
    name='ObjectiveFunction',
    full_name='tensorflow.metadata.v0.ObjectiveFunction',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='binary_cross_entropy',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.binary_cross_entropy',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='logistic_regression',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.logistic_regression',
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='squared_error',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.squared_error',
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='custom_metric',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.custom_metric',
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='auc',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.auc',
            index=4,
            number=5,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_absolute_error',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.mean_absolute_error',
            index=5,
            number=6,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_absolute_percentage_error',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.mean_absolute_percentage_error',
            index=6,
            number=7,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_squared_logarithmic_error',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.mean_squared_logarithmic_error',
            index=7,
            number=8,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='categorical_cross_entropy',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.categorical_cross_entropy',
            index=8,
            number=9,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='poisson',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.poisson',
            index=9,
            number=10,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name='objective',
            full_name='tensorflow.metadata.v0.ObjectiveFunction.objective',
            index=0,
            containing_type=None,
            fields=[]),
    ],
    serialized_start=1132,
    serialized_end=1891,
)

_PERFORMANCEMETRIC = _descriptor.Descriptor(
    name='PerformanceMetric',
    full_name='tensorflow.metadata.v0.PerformanceMetric',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='auc',
            full_name='tensorflow.metadata.v0.PerformanceMetric.auc',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='auc_precision_recall',
            full_name='tensorflow.metadata.v0.PerformanceMetric.auc_precision_recall',
            index=1,
            number=26,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='binary_accuracy',
            full_name='tensorflow.metadata.v0.PerformanceMetric.binary_accuracy',
            index=2,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='binary_cross_entropy',
            full_name='tensorflow.metadata.v0.PerformanceMetric.binary_cross_entropy',
            index=3,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='block_utility',
            full_name='tensorflow.metadata.v0.PerformanceMetric.block_utility',
            index=4,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='categorical_accuracy',
            full_name='tensorflow.metadata.v0.PerformanceMetric.categorical_accuracy',
            index=5,
            number=5,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='categorical_cross_entropy',
            full_name='tensorflow.metadata.v0.PerformanceMetric.categorical_cross_entropy',
            index=6,
            number=6,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='cosine',
            full_name='tensorflow.metadata.v0.PerformanceMetric.cosine',
            index=7,
            number=7,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='hinge',
            full_name='tensorflow.metadata.v0.PerformanceMetric.hinge',
            index=8,
            number=8,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='kullback_leibler_divergence',
            full_name='tensorflow.metadata.v0.PerformanceMetric.kullback_leibler_divergence',
            index=9,
            number=9,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='logistic_regression',
            full_name='tensorflow.metadata.v0.PerformanceMetric.logistic_regression',
            index=10,
            number=10,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_absolute_error',
            full_name='tensorflow.metadata.v0.PerformanceMetric.mean_absolute_error',
            index=11,
            number=11,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_absolute_percentage_error',
            full_name='tensorflow.metadata.v0.PerformanceMetric.mean_absolute_percentage_error',
            index=12,
            number=12,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='squared_error',
            full_name='tensorflow.metadata.v0.PerformanceMetric.squared_error',
            index=13,
            number=13,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_squared_logarithmic_error',
            full_name='tensorflow.metadata.v0.PerformanceMetric.mean_squared_logarithmic_error',
            index=14,
            number=14,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='mean_reciprocal_rank',
            full_name='tensorflow.metadata.v0.PerformanceMetric.mean_reciprocal_rank',
            index=15,
            number=15,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='poisson',
            full_name='tensorflow.metadata.v0.PerformanceMetric.poisson',
            index=16,
            number=16,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='precision_at_k',
            full_name='tensorflow.metadata.v0.PerformanceMetric.precision_at_k',
            index=17,
            number=17,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='squared_hinge',
            full_name='tensorflow.metadata.v0.PerformanceMetric.squared_hinge',
            index=18,
            number=18,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='sparse_top_k_categorical_accuracy',
            full_name='tensorflow.metadata.v0.PerformanceMetric.sparse_top_k_categorical_accuracy',
            index=19,
            number=19,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='top_k_categorical_accuracy',
            full_name='tensorflow.metadata.v0.PerformanceMetric.top_k_categorical_accuracy',
            index=20,
            number=20,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='custom_metric',
            full_name='tensorflow.metadata.v0.PerformanceMetric.custom_metric',
            index=21,
            number=21,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='sensitivity_at_specificity',
            full_name='tensorflow.metadata.v0.PerformanceMetric.sensitivity_at_specificity',
            index=22,
            number=22,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='specificity_at_sensitivity',
            full_name='tensorflow.metadata.v0.PerformanceMetric.specificity_at_sensitivity',
            index=23,
            number=23,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='precision_at_recall',
            full_name='tensorflow.metadata.v0.PerformanceMetric.precision_at_recall',
            index=24,
            number=24,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='recall_at_precision',
            full_name='tensorflow.metadata.v0.PerformanceMetric.recall_at_precision',
            index=25,
            number=25,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name='performance_metric',
            full_name='tensorflow.metadata.v0.PerformanceMetric.performance_metric',
            index=0,
            containing_type=None,
            fields=[]),
    ],
    serialized_start=1894,
    serialized_end=3847,
)

_SENSITIVITYATSPECIFICITY.fields_by_name[
    'specificity'].message_type = google_dot_protobuf_dot_wrappers__pb2._DOUBLEVALUE
_SPECIFICITYATSENSITIVITY.fields_by_name[
    'sensitivity'].message_type = google_dot_protobuf_dot_wrappers__pb2._DOUBLEVALUE
_PRECISIONATRECALL.fields_by_name[
    'recall'].message_type = google_dot_protobuf_dot_wrappers__pb2._DOUBLEVALUE
_RECALLATPRECISION.fields_by_name[
    'precision'].message_type = google_dot_protobuf_dot_wrappers__pb2._DOUBLEVALUE
_OBJECTIVEFUNCTION.fields_by_name[
    'binary_cross_entropy'].message_type = _BINARYCROSSENTROPY
_OBJECTIVEFUNCTION.fields_by_name[
    'logistic_regression'].message_type = _LOGISTICREGRESSION
_OBJECTIVEFUNCTION.fields_by_name[
    'squared_error'].message_type = _MEANSQUAREDERROR
_OBJECTIVEFUNCTION.fields_by_name['custom_metric'].message_type = _CUSTOMMETRIC
_OBJECTIVEFUNCTION.fields_by_name['auc'].message_type = _AUC
_OBJECTIVEFUNCTION.fields_by_name[
    'mean_absolute_error'].message_type = _MEANABSOLUTEERROR
_OBJECTIVEFUNCTION.fields_by_name[
    'mean_absolute_percentage_error'].message_type = _MEANABSOLUTEPERCENTAGEERROR
_OBJECTIVEFUNCTION.fields_by_name[
    'mean_squared_logarithmic_error'].message_type = _MEANSQUAREDLOGARITHMICERROR
_OBJECTIVEFUNCTION.fields_by_name[
    'categorical_cross_entropy'].message_type = _CATEGORICALCROSSENTROPY
_OBJECTIVEFUNCTION.fields_by_name['poisson'].message_type = _POISSON
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['binary_cross_entropy'])
_OBJECTIVEFUNCTION.fields_by_name[
    'binary_cross_entropy'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['logistic_regression'])
_OBJECTIVEFUNCTION.fields_by_name[
    'logistic_regression'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['squared_error'])
_OBJECTIVEFUNCTION.fields_by_name[
    'squared_error'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['custom_metric'])
_OBJECTIVEFUNCTION.fields_by_name[
    'custom_metric'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['auc'])
_OBJECTIVEFUNCTION.fields_by_name[
    'auc'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name['objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['mean_absolute_error'])
_OBJECTIVEFUNCTION.fields_by_name[
    'mean_absolute_error'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['mean_absolute_percentage_error'])
_OBJECTIVEFUNCTION.fields_by_name[
    'mean_absolute_percentage_error'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['mean_squared_logarithmic_error'])
_OBJECTIVEFUNCTION.fields_by_name[
    'mean_squared_logarithmic_error'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['categorical_cross_entropy'])
_OBJECTIVEFUNCTION.fields_by_name[
    'categorical_cross_entropy'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name[
        'objective']
_OBJECTIVEFUNCTION.oneofs_by_name['objective'].fields.append(
    _OBJECTIVEFUNCTION.fields_by_name['poisson'])
_OBJECTIVEFUNCTION.fields_by_name[
    'poisson'].containing_oneof = _OBJECTIVEFUNCTION.oneofs_by_name['objective']
_PERFORMANCEMETRIC.fields_by_name['auc'].message_type = _AUC
_PERFORMANCEMETRIC.fields_by_name[
    'auc_precision_recall'].message_type = _AUCPRECISIONRECALL
_PERFORMANCEMETRIC.fields_by_name[
    'binary_accuracy'].message_type = _BINARYACCURACY
_PERFORMANCEMETRIC.fields_by_name[
    'binary_cross_entropy'].message_type = _BINARYCROSSENTROPY
_PERFORMANCEMETRIC.fields_by_name['block_utility'].message_type = _BLOCKUTILITY
_PERFORMANCEMETRIC.fields_by_name[
    'categorical_accuracy'].message_type = _CATEGORICALACCURACY
_PERFORMANCEMETRIC.fields_by_name[
    'categorical_cross_entropy'].message_type = _CATEGORICALCROSSENTROPY
_PERFORMANCEMETRIC.fields_by_name['cosine'].message_type = _COSINE
_PERFORMANCEMETRIC.fields_by_name['hinge'].message_type = _HINGE
_PERFORMANCEMETRIC.fields_by_name[
    'kullback_leibler_divergence'].message_type = _KULLBACKLEIBLERDIVERGENCE
_PERFORMANCEMETRIC.fields_by_name[
    'logistic_regression'].message_type = _LOGISTICREGRESSION
_PERFORMANCEMETRIC.fields_by_name[
    'mean_absolute_error'].message_type = _MEANABSOLUTEERROR
_PERFORMANCEMETRIC.fields_by_name[
    'mean_absolute_percentage_error'].message_type = _MEANABSOLUTEPERCENTAGEERROR
_PERFORMANCEMETRIC.fields_by_name[
    'squared_error'].message_type = _MEANSQUAREDERROR
_PERFORMANCEMETRIC.fields_by_name[
    'mean_squared_logarithmic_error'].message_type = _MEANSQUAREDLOGARITHMICERROR
_PERFORMANCEMETRIC.fields_by_name[
    'mean_reciprocal_rank'].message_type = _MEANRECIPROCALRANK
_PERFORMANCEMETRIC.fields_by_name['poisson'].message_type = _POISSON
_PERFORMANCEMETRIC.fields_by_name['precision_at_k'].message_type = _PRECISIONATK
_PERFORMANCEMETRIC.fields_by_name['squared_hinge'].message_type = _SQUAREDHINGE
_PERFORMANCEMETRIC.fields_by_name[
    'sparse_top_k_categorical_accuracy'].message_type = _SPARSETOPKCATEGORICALACCURACY
_PERFORMANCEMETRIC.fields_by_name[
    'top_k_categorical_accuracy'].message_type = _TOPKCATEGORICALACCURACY
_PERFORMANCEMETRIC.fields_by_name['custom_metric'].message_type = _CUSTOMMETRIC
_PERFORMANCEMETRIC.fields_by_name[
    'sensitivity_at_specificity'].message_type = _SENSITIVITYATSPECIFICITY
_PERFORMANCEMETRIC.fields_by_name[
    'specificity_at_sensitivity'].message_type = _SPECIFICITYATSENSITIVITY
_PERFORMANCEMETRIC.fields_by_name[
    'precision_at_recall'].message_type = _PRECISIONATRECALL
_PERFORMANCEMETRIC.fields_by_name[
    'recall_at_precision'].message_type = _RECALLATPRECISION
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['auc'])
_PERFORMANCEMETRIC.fields_by_name[
    'auc'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['auc_precision_recall'])
_PERFORMANCEMETRIC.fields_by_name[
    'auc_precision_recall'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['binary_accuracy'])
_PERFORMANCEMETRIC.fields_by_name[
    'binary_accuracy'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['binary_cross_entropy'])
_PERFORMANCEMETRIC.fields_by_name[
    'binary_cross_entropy'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['block_utility'])
_PERFORMANCEMETRIC.fields_by_name[
    'block_utility'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['categorical_accuracy'])
_PERFORMANCEMETRIC.fields_by_name[
    'categorical_accuracy'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['categorical_cross_entropy'])
_PERFORMANCEMETRIC.fields_by_name[
    'categorical_cross_entropy'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['cosine'])
_PERFORMANCEMETRIC.fields_by_name[
    'cosine'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['hinge'])
_PERFORMANCEMETRIC.fields_by_name[
    'hinge'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['kullback_leibler_divergence'])
_PERFORMANCEMETRIC.fields_by_name[
    'kullback_leibler_divergence'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['logistic_regression'])
_PERFORMANCEMETRIC.fields_by_name[
    'logistic_regression'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['mean_absolute_error'])
_PERFORMANCEMETRIC.fields_by_name[
    'mean_absolute_error'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['mean_absolute_percentage_error'])
_PERFORMANCEMETRIC.fields_by_name[
    'mean_absolute_percentage_error'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['squared_error'])
_PERFORMANCEMETRIC.fields_by_name[
    'squared_error'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['mean_squared_logarithmic_error'])
_PERFORMANCEMETRIC.fields_by_name[
    'mean_squared_logarithmic_error'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['mean_reciprocal_rank'])
_PERFORMANCEMETRIC.fields_by_name[
    'mean_reciprocal_rank'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['poisson'])
_PERFORMANCEMETRIC.fields_by_name[
    'poisson'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['precision_at_k'])
_PERFORMANCEMETRIC.fields_by_name[
    'precision_at_k'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['squared_hinge'])
_PERFORMANCEMETRIC.fields_by_name[
    'squared_hinge'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['sparse_top_k_categorical_accuracy'])
_PERFORMANCEMETRIC.fields_by_name[
    'sparse_top_k_categorical_accuracy'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['top_k_categorical_accuracy'])
_PERFORMANCEMETRIC.fields_by_name[
    'top_k_categorical_accuracy'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['custom_metric'])
_PERFORMANCEMETRIC.fields_by_name[
    'custom_metric'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['sensitivity_at_specificity'])
_PERFORMANCEMETRIC.fields_by_name[
    'sensitivity_at_specificity'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['specificity_at_sensitivity'])
_PERFORMANCEMETRIC.fields_by_name[
    'specificity_at_sensitivity'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['precision_at_recall'])
_PERFORMANCEMETRIC.fields_by_name[
    'precision_at_recall'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
_PERFORMANCEMETRIC.oneofs_by_name['performance_metric'].fields.append(
    _PERFORMANCEMETRIC.fields_by_name['recall_at_precision'])
_PERFORMANCEMETRIC.fields_by_name[
    'recall_at_precision'].containing_oneof = _PERFORMANCEMETRIC.oneofs_by_name[
        'performance_metric']
DESCRIPTOR.message_types_by_name['BinaryAccuracy'] = _BINARYACCURACY
DESCRIPTOR.message_types_by_name['CategoricalAccuracy'] = _CATEGORICALACCURACY
DESCRIPTOR.message_types_by_name[
    'CategoricalCrossEntropy'] = _CATEGORICALCROSSENTROPY
DESCRIPTOR.message_types_by_name['Cosine'] = _COSINE
DESCRIPTOR.message_types_by_name['Hinge'] = _HINGE
DESCRIPTOR.message_types_by_name[
    'KullbackLeiblerDivergence'] = _KULLBACKLEIBLERDIVERGENCE
DESCRIPTOR.message_types_by_name['MeanAbsoluteError'] = _MEANABSOLUTEERROR
DESCRIPTOR.message_types_by_name[
    'MeanAbsolutePercentageError'] = _MEANABSOLUTEPERCENTAGEERROR
DESCRIPTOR.message_types_by_name['MeanSquaredError'] = _MEANSQUAREDERROR
DESCRIPTOR.message_types_by_name[
    'MeanSquaredLogarithmicError'] = _MEANSQUAREDLOGARITHMICERROR
DESCRIPTOR.message_types_by_name['Poisson'] = _POISSON
DESCRIPTOR.message_types_by_name['SquaredHinge'] = _SQUAREDHINGE
DESCRIPTOR.message_types_by_name[
    'TopKCategoricalAccuracy'] = _TOPKCATEGORICALACCURACY
DESCRIPTOR.message_types_by_name[
    'SparseTopKCategoricalAccuracy'] = _SPARSETOPKCATEGORICALACCURACY
DESCRIPTOR.message_types_by_name['BinaryCrossEntropy'] = _BINARYCROSSENTROPY
DESCRIPTOR.message_types_by_name['LogisticRegression'] = _LOGISTICREGRESSION
DESCRIPTOR.message_types_by_name['AUC'] = _AUC
DESCRIPTOR.message_types_by_name['AUCPrecisionRecall'] = _AUCPRECISIONRECALL
DESCRIPTOR.message_types_by_name[
    'SensitivityAtSpecificity'] = _SENSITIVITYATSPECIFICITY
DESCRIPTOR.message_types_by_name[
    'SpecificityAtSensitivity'] = _SPECIFICITYATSENSITIVITY
DESCRIPTOR.message_types_by_name['PrecisionAtRecall'] = _PRECISIONATRECALL
DESCRIPTOR.message_types_by_name['RecallAtPrecision'] = _RECALLATPRECISION
DESCRIPTOR.message_types_by_name['PrecisionAtK'] = _PRECISIONATK
DESCRIPTOR.message_types_by_name['MeanReciprocalRank'] = _MEANRECIPROCALRANK
DESCRIPTOR.message_types_by_name['BlockUtility'] = _BLOCKUTILITY
DESCRIPTOR.message_types_by_name['CustomMetric'] = _CUSTOMMETRIC
DESCRIPTOR.message_types_by_name['ObjectiveFunction'] = _OBJECTIVEFUNCTION
DESCRIPTOR.message_types_by_name['PerformanceMetric'] = _PERFORMANCEMETRIC
DESCRIPTOR.enum_types_by_name['MetricType'] = _METRICTYPE
DESCRIPTOR.extensions_by_name['metric_type'] = metric_type
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BinaryAccuracy = _reflection.GeneratedProtocolMessageType(
    'BinaryAccuracy',
    (_message.Message,),
    {
        'DESCRIPTOR': _BINARYACCURACY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.BinaryAccuracy)
    })
_sym_db.RegisterMessage(BinaryAccuracy)

CategoricalAccuracy = _reflection.GeneratedProtocolMessageType(
    'CategoricalAccuracy',
    (_message.Message,),
    {
        'DESCRIPTOR': _CATEGORICALACCURACY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.CategoricalAccuracy)
    })
_sym_db.RegisterMessage(CategoricalAccuracy)

CategoricalCrossEntropy = _reflection.GeneratedProtocolMessageType(
    'CategoricalCrossEntropy',
    (_message.Message,),
    {
        'DESCRIPTOR': _CATEGORICALCROSSENTROPY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.CategoricalCrossEntropy)
    })
_sym_db.RegisterMessage(CategoricalCrossEntropy)

Cosine = _reflection.GeneratedProtocolMessageType(
    'Cosine',
    (_message.Message,),
    {
        'DESCRIPTOR': _COSINE,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.Cosine)
    })
_sym_db.RegisterMessage(Cosine)

Hinge = _reflection.GeneratedProtocolMessageType(
    'Hinge',
    (_message.Message,),
    {
        'DESCRIPTOR': _HINGE,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.Hinge)
    })
_sym_db.RegisterMessage(Hinge)

KullbackLeiblerDivergence = _reflection.GeneratedProtocolMessageType(
    'KullbackLeiblerDivergence',
    (_message.Message,),
    {
        'DESCRIPTOR': _KULLBACKLEIBLERDIVERGENCE,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.KullbackLeiblerDivergence)
    })
_sym_db.RegisterMessage(KullbackLeiblerDivergence)

MeanAbsoluteError = _reflection.GeneratedProtocolMessageType(
    'MeanAbsoluteError',
    (_message.Message,),
    {
        'DESCRIPTOR': _MEANABSOLUTEERROR,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.MeanAbsoluteError)
    })
_sym_db.RegisterMessage(MeanAbsoluteError)

MeanAbsolutePercentageError = _reflection.GeneratedProtocolMessageType(
    'MeanAbsolutePercentageError',
    (_message.Message,),
    {
        'DESCRIPTOR': _MEANABSOLUTEPERCENTAGEERROR,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.MeanAbsolutePercentageError)
    })
_sym_db.RegisterMessage(MeanAbsolutePercentageError)

MeanSquaredError = _reflection.GeneratedProtocolMessageType(
    'MeanSquaredError',
    (_message.Message,),
    {
        'DESCRIPTOR': _MEANSQUAREDERROR,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.MeanSquaredError)
    })
_sym_db.RegisterMessage(MeanSquaredError)

MeanSquaredLogarithmicError = _reflection.GeneratedProtocolMessageType(
    'MeanSquaredLogarithmicError',
    (_message.Message,),
    {
        'DESCRIPTOR': _MEANSQUAREDLOGARITHMICERROR,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.MeanSquaredLogarithmicError)
    })
_sym_db.RegisterMessage(MeanSquaredLogarithmicError)

Poisson = _reflection.GeneratedProtocolMessageType(
    'Poisson',
    (_message.Message,),
    {
        'DESCRIPTOR': _POISSON,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.Poisson)
    })
_sym_db.RegisterMessage(Poisson)

SquaredHinge = _reflection.GeneratedProtocolMessageType(
    'SquaredHinge',
    (_message.Message,),
    {
        'DESCRIPTOR': _SQUAREDHINGE,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.SquaredHinge)
    })
_sym_db.RegisterMessage(SquaredHinge)

TopKCategoricalAccuracy = _reflection.GeneratedProtocolMessageType(
    'TopKCategoricalAccuracy',
    (_message.Message,),
    {
        'DESCRIPTOR': _TOPKCATEGORICALACCURACY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.TopKCategoricalAccuracy)
    })
_sym_db.RegisterMessage(TopKCategoricalAccuracy)

SparseTopKCategoricalAccuracy = _reflection.GeneratedProtocolMessageType(
    'SparseTopKCategoricalAccuracy',
    (_message.Message,),
    {
        'DESCRIPTOR': _SPARSETOPKCATEGORICALACCURACY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.SparseTopKCategoricalAccuracy)
    })
_sym_db.RegisterMessage(SparseTopKCategoricalAccuracy)

BinaryCrossEntropy = _reflection.GeneratedProtocolMessageType(
    'BinaryCrossEntropy',
    (_message.Message,),
    {
        'DESCRIPTOR': _BINARYCROSSENTROPY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.BinaryCrossEntropy)
    })
_sym_db.RegisterMessage(BinaryCrossEntropy)

LogisticRegression = _reflection.GeneratedProtocolMessageType(
    'LogisticRegression',
    (_message.Message,),
    {
        'DESCRIPTOR': _LOGISTICREGRESSION,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.LogisticRegression)
    })
_sym_db.RegisterMessage(LogisticRegression)

AUC = _reflection.GeneratedProtocolMessageType(
    'AUC',
    (_message.Message,),
    {
        'DESCRIPTOR': _AUC,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.AUC)
    })
_sym_db.RegisterMessage(AUC)

AUCPrecisionRecall = _reflection.GeneratedProtocolMessageType(
    'AUCPrecisionRecall',
    (_message.Message,),
    {
        'DESCRIPTOR': _AUCPRECISIONRECALL,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.AUCPrecisionRecall)
    })
_sym_db.RegisterMessage(AUCPrecisionRecall)

SensitivityAtSpecificity = _reflection.GeneratedProtocolMessageType(
    'SensitivityAtSpecificity',
    (_message.Message,),
    {
        'DESCRIPTOR': _SENSITIVITYATSPECIFICITY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.SensitivityAtSpecificity)
    })
_sym_db.RegisterMessage(SensitivityAtSpecificity)

SpecificityAtSensitivity = _reflection.GeneratedProtocolMessageType(
    'SpecificityAtSensitivity',
    (_message.Message,),
    {
        'DESCRIPTOR': _SPECIFICITYATSENSITIVITY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.SpecificityAtSensitivity)
    })
_sym_db.RegisterMessage(SpecificityAtSensitivity)

PrecisionAtRecall = _reflection.GeneratedProtocolMessageType(
    'PrecisionAtRecall',
    (_message.Message,),
    {
        'DESCRIPTOR': _PRECISIONATRECALL,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.PrecisionAtRecall)
    })
_sym_db.RegisterMessage(PrecisionAtRecall)

RecallAtPrecision = _reflection.GeneratedProtocolMessageType(
    'RecallAtPrecision',
    (_message.Message,),
    {
        'DESCRIPTOR': _RECALLATPRECISION,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.RecallAtPrecision)
    })
_sym_db.RegisterMessage(RecallAtPrecision)

PrecisionAtK = _reflection.GeneratedProtocolMessageType(
    'PrecisionAtK',
    (_message.Message,),
    {
        'DESCRIPTOR': _PRECISIONATK,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.PrecisionAtK)
    })
_sym_db.RegisterMessage(PrecisionAtK)

MeanReciprocalRank = _reflection.GeneratedProtocolMessageType(
    'MeanReciprocalRank',
    (_message.Message,),
    {
        'DESCRIPTOR': _MEANRECIPROCALRANK,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.MeanReciprocalRank)
    })
_sym_db.RegisterMessage(MeanReciprocalRank)

BlockUtility = _reflection.GeneratedProtocolMessageType(
    'BlockUtility',
    (_message.Message,),
    {
        'DESCRIPTOR': _BLOCKUTILITY,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.BlockUtility)
    })
_sym_db.RegisterMessage(BlockUtility)

CustomMetric = _reflection.GeneratedProtocolMessageType(
    'CustomMetric',
    (_message.Message,),
    {
        'DESCRIPTOR': _CUSTOMMETRIC,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.CustomMetric)
    })
_sym_db.RegisterMessage(CustomMetric)

ObjectiveFunction = _reflection.GeneratedProtocolMessageType(
    'ObjectiveFunction',
    (_message.Message,),
    {
        'DESCRIPTOR': _OBJECTIVEFUNCTION,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.ObjectiveFunction)
    })
_sym_db.RegisterMessage(ObjectiveFunction)

PerformanceMetric = _reflection.GeneratedProtocolMessageType(
    'PerformanceMetric',
    (_message.Message,),
    {
        'DESCRIPTOR': _PERFORMANCEMETRIC,
        '__module__': 'tensorflow_metadata.proto.v0.metric_pb2'
        # @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.PerformanceMetric)
    })
_sym_db.RegisterMessage(PerformanceMetric)

metric_type.enum_type = _METRICTYPE
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(
    metric_type)

DESCRIPTOR._options = None
_BINARYACCURACY._options = None
_CATEGORICALACCURACY._options = None
_CATEGORICALCROSSENTROPY._options = None
_COSINE._options = None
_HINGE._options = None
_KULLBACKLEIBLERDIVERGENCE._options = None
_MEANABSOLUTEERROR._options = None
_MEANABSOLUTEPERCENTAGEERROR._options = None
_MEANSQUAREDERROR._options = None
_MEANSQUAREDLOGARITHMICERROR._options = None
_POISSON._options = None
_SQUAREDHINGE._options = None
_TOPKCATEGORICALACCURACY._options = None
_SPARSETOPKCATEGORICALACCURACY._options = None
_BINARYCROSSENTROPY._options = None
_LOGISTICREGRESSION._options = None
_AUC._options = None
_AUCPRECISIONRECALL._options = None
_SENSITIVITYATSPECIFICITY._options = None
_SPECIFICITYATSENSITIVITY._options = None
_PRECISIONATRECALL._options = None
_RECALLATPRECISION._options = None
_PRECISIONATK._options = None
_BLOCKUTILITY._options = None
_CUSTOMMETRIC._options = None
# @@protoc_insertion_point(module_scope)
